module Evergreen.Migrate.V6 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplementеd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Dict
import Evergreen.V4.Types
import Evergreen.V6.Types
import Lamdera.Migrations exposing (..)
import List
import Maybe


frontendModel : Evergreen.V4.Types.FrontendModel -> ModelMigration Evergreen.V6.Types.FrontendModel Evergreen.V6.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V4.Types.BackendModel -> ModelMigration Evergreen.V6.Types.BackendModel Evergreen.V6.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V4.Types.FrontendMsg -> MsgMigration Evergreen.V6.Types.FrontendMsg Evergreen.V6.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V4.Types.ToBackend -> MsgMigration Evergreen.V6.Types.ToBackend Evergreen.V6.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V4.Types.BackendMsg -> MsgMigration Evergreen.V6.Types.BackendMsg Evergreen.V6.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V4.Types.ToFrontend -> MsgMigration Evergreen.V6.Types.ToFrontend Evergreen.V6.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V4.Types.BackendModel -> Evergreen.V6.Types.BackendModel
migrate_Types_BackendModel old =
    { teams = old.teams |> Dict.map (\k -> migrate_Types_TeamData)
    , nextId = old.nextId
    , randomSeed = old.randomSeed
    , teamSessions = old.teamSessions
    }


migrate_Types_FrontendModel : Evergreen.V4.Types.FrontendModel -> Evergreen.V6.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , page = old.page |> migrate_Types_Page
    , currentTeam = old.currentTeam |> Maybe.map migrate_Types_Team
    , activeMemberId = old.activeMemberId
    , createTeamForm = old.createTeamForm |> migrate_Types_CreateTeamForm
    , createMatchForm = old.createMatchForm |> migrate_Types_CreateMatchForm
    , createMemberForm = old.createMemberForm |> migrate_Types_CreateMemberForm
    , matches = old.matches |> List.map migrate_Types_Match
    , members = old.members
    , availability = old.availability |> List.map migrate_Types_AvailabilityRecord
    , showCreateMatchModal = old.showCreateMatchModal
    , showCreateMemberModal = old.showCreateMemberModal
    , showMemberSelectionModal = old.showMemberSelectionModal
    , showCreateMemberInModal = old.showCreateMemberInModal
    , showChangeMatchDateModal = old.showChangeMatchDateModal
    , changeMatchDateForm = old.changeMatchDateForm
    , changeMatchDateMatchId = old.changeMatchDateMatchId
    , showShareModal = old.showShareModal
    , expandedMatches = old.expandedMatches
    , pastMatchesShown = old.pastMatchesShown
    , pastMatchesExpanded = old.pastMatchesExpanded
    , hostname = old.hostname
    , confirmedTeamCodes = Dict.empty
    , accessCodeRequired = Nothing
    , enteredAccessCode = ""
    }


migrate_Types_Availability : Evergreen.V4.Types.Availability -> Evergreen.V6.Types.Availability
migrate_Types_Availability old =
    case old of
        Evergreen.V4.Types.Available ->
            Evergreen.V6.Types.Available

        Evergreen.V4.Types.NotAvailable ->
            Evergreen.V6.Types.NotAvailable

        Evergreen.V4.Types.Maybe ->
            Evergreen.V6.Types.Maybe


migrate_Types_AvailabilityRecord : Evergreen.V4.Types.AvailabilityRecord -> Evergreen.V6.Types.AvailabilityRecord
migrate_Types_AvailabilityRecord old =
    { memberId = old.memberId
    , matchId = old.matchId
    , availability = old.availability |> migrate_Types_Availability
    }


migrate_Types_CreateMatchForm : Evergreen.V4.Types.CreateMatchForm -> Evergreen.V6.Types.CreateMatchForm
migrate_Types_CreateMatchForm old =
    old


migrate_Types_CreateMemberForm : Evergreen.V4.Types.CreateMemberForm -> Evergreen.V6.Types.CreateMemberForm
migrate_Types_CreateMemberForm old =
    old


migrate_Types_CreateTeamForm : Evergreen.V4.Types.CreateTeamForm -> Evergreen.V6.Types.CreateTeamForm
migrate_Types_CreateTeamForm old =
    { name = old.name
    , creatorName = old.creatorName
    , otherMemberNames = old.otherMemberNames
    , playersNeeded = old.playersNeeded
    , accessCode = "1234"
    }


migrate_Types_FrontendMsg : Evergreen.V4.Types.FrontendMsg -> Evergreen.V6.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V4.Types.UrlClicked p0 ->
            Evergreen.V6.Types.UrlClicked p0

        Evergreen.V4.Types.UrlChanged p0 ->
            Evergreen.V6.Types.UrlChanged p0

        Evergreen.V4.Types.CreateTeamFormUpdated p0 ->
            Evergreen.V6.Types.CreateTeamFormUpdated (p0 |> migrate_Types_CreateTeamForm)

        Evergreen.V4.Types.CreateTeamSubmitted ->
            Evergreen.V6.Types.CreateTeamSubmitted

        Evergreen.V4.Types.CreateMatchFormUpdated p0 ->
            Evergreen.V6.Types.CreateMatchFormUpdated (p0 |> migrate_Types_CreateMatchForm)

        Evergreen.V4.Types.CreateMatchSubmitted p0 ->
            Evergreen.V6.Types.CreateMatchSubmitted p0

        Evergreen.V4.Types.ShowCreateMatchModal ->
            Evergreen.V6.Types.ShowCreateMatchModal

        Evergreen.V4.Types.HideCreateMatchModal ->
            Evergreen.V6.Types.HideCreateMatchModal

        Evergreen.V4.Types.CreateMemberFormUpdated p0 ->
            Evergreen.V6.Types.CreateMemberFormUpdated (p0 |> migrate_Types_CreateMemberForm)

        Evergreen.V4.Types.CreateMemberSubmitted p0 ->
            Evergreen.V6.Types.CreateMemberSubmitted p0

        Evergreen.V4.Types.ShowCreateMemberModal ->
            Evergreen.V6.Types.ShowCreateMemberModal

        Evergreen.V4.Types.HideCreateMemberModal ->
            Evergreen.V6.Types.HideCreateMemberModal

        Evergreen.V4.Types.ShowMemberSelectionModal ->
            Evergreen.V6.Types.ShowMemberSelectionModal

        Evergreen.V4.Types.HideMemberSelectionModal ->
            Evergreen.V6.Types.HideMemberSelectionModal

        Evergreen.V4.Types.SelectActiveMember p0 ->
            Evergreen.V6.Types.SelectActiveMember p0

        Evergreen.V4.Types.ShowCreateMemberInModal ->
            Evergreen.V6.Types.ShowCreateMemberInModal

        Evergreen.V4.Types.HideCreateMemberInModal ->
            Evergreen.V6.Types.HideCreateMemberInModal

        Evergreen.V4.Types.LocalStorageMessage p0 ->
            Evergreen.V6.Types.LocalStorageMessage p0

        Evergreen.V4.Types.LogoutRequested ->
            Evergreen.V6.Types.LogoutRequested

        Evergreen.V4.Types.SetAvailability p0 p1 p2 ->
            Evergreen.V6.Types.SetAvailability p0 p1 (p2 |> migrate_Types_Availability)

        Evergreen.V4.Types.ToggleMatchDetails p0 ->
            Evergreen.V6.Types.ToggleMatchDetails p0

        Evergreen.V4.Types.LoadMorePastMatches ->
            Evergreen.V6.Types.LoadMorePastMatches

        Evergreen.V4.Types.TogglePastMatchesSection ->
            Evergreen.V6.Types.TogglePastMatchesSection

        Evergreen.V4.Types.ShowChangeMatchDateModal p0 ->
            Evergreen.V6.Types.ShowChangeMatchDateModal p0

        Evergreen.V4.Types.HideChangeMatchDateModal ->
            Evergreen.V6.Types.HideChangeMatchDateModal

        Evergreen.V4.Types.ChangeMatchDateFormUpdated p0 p1 ->
            Evergreen.V6.Types.ChangeMatchDateFormUpdated p0 p1

        Evergreen.V4.Types.ChangeMatchDateSubmitted p0 p1 ->
            Evergreen.V6.Types.ChangeMatchDateSubmitted p0 p1

        Evergreen.V4.Types.ShowShareModal ->
            Evergreen.V6.Types.ShowShareModal

        Evergreen.V4.Types.HideShareModal ->
            Evergreen.V6.Types.HideShareModal

        Evergreen.V4.Types.NoOpFrontendMsg ->
            Evergreen.V6.Types.NoOpFrontendMsg



migrate_Types_Match : Evergreen.V4.Types.Match -> Evergreen.V6.Types.Match
migrate_Types_Match old =
    { id = old.id
    , opponent = old.opponent
    , date = old.date
    , time = old.time
    , isHome = old.isHome
    , venue = old.venue
    , season = old.season
    , seasonHalf = old.seasonHalf |> migrate_Types_SeasonHalf
    , matchday = old.matchday
    }


migrate_Types_Member : Evergreen.V4.Types.Member -> Evergreen.V6.Types.Member
migrate_Types_Member old =
    old


migrate_Types_Page : Evergreen.V4.Types.Page -> Evergreen.V6.Types.Page
migrate_Types_Page old =
    case old of
        Evergreen.V4.Types.HomePage ->
            Evergreen.V6.Types.HomePage

        Evergreen.V4.Types.CreateTeamPage ->
            Evergreen.V6.Types.CreateTeamPage

        Evergreen.V4.Types.TeamPage p0 ->
            Evergreen.V6.Types.TeamPage p0

        Evergreen.V4.Types.NotFoundPage ->
            Evergreen.V6.Types.NotFoundPage


migrate_Types_SeasonData : Evergreen.V4.Types.SeasonData -> Evergreen.V6.Types.SeasonData
migrate_Types_SeasonData old =
    { hinrunde = old.hinrunde |> List.map migrate_Types_Match
    , rückrunde = old.rückrunde |> List.map migrate_Types_Match
    }


migrate_Types_SeasonHalf : Evergreen.V4.Types.SeasonHalf -> Evergreen.V6.Types.SeasonHalf
migrate_Types_SeasonHalf old =
    case old of
        Evergreen.V4.Types.Hinrunde ->
            Evergreen.V6.Types.Hinrunde

        Evergreen.V4.Types.Rückrunde ->
            Evergreen.V6.Types.Rückrunde


migrate_Types_Team : Evergreen.V4.Types.Team -> Evergreen.V6.Types.Team
migrate_Types_Team old =
    { id = old.id
    , name = old.name
    , slug = old.slug
    , playersNeeded = old.playersNeeded
    , createdAt = old.createdAt
    , accessCode = "1234"
    }


migrate_Types_TeamData : Evergreen.V4.Types.TeamData -> Evergreen.V6.Types.TeamData
migrate_Types_TeamData old =
    { team = old.team |> migrate_Types_Team
    , seasons = old.seasons |> Dict.map (\k -> migrate_Types_SeasonData)
    , members = old.members
    , availability = old.availability |> Dict.map (\k -> Dict.map (\k2 -> migrate_Types_Availability))
    }


migrate_Types_ToBackend : Evergreen.V4.Types.ToBackend -> Evergreen.V6.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V4.Types.CreateTeamRequest p0 p1 p2 p3 ->
            Evergreen.V6.Types.CreateTeamRequest p0
                p1
                p2
                p3
                "1234"

        Evergreen.V4.Types.GetTeamRequest p0 ->
            Evergreen.V6.Types.GetTeamRequest p0
                "1234"

        Evergreen.V4.Types.CreateMatchRequest p0 p1 ->
            Evergreen.V6.Types.CreateMatchRequest p0
                (p1 |> migrate_Types_CreateMatchForm)
                "1234"

        Evergreen.V4.Types.CreateMemberRequest p0 p1 ->
            Evergreen.V6.Types.CreateMemberRequest p0
                (p1 |> migrate_Types_CreateMemberForm)
                "1234"

        Evergreen.V4.Types.UpdateAvailabilityRequest p0 p1 p2 ->
            Evergreen.V6.Types.UpdateAvailabilityRequest p0
                p1
                (p2 |> migrate_Types_Availability)
                "1234"

        Evergreen.V4.Types.ChangeMatchDateRequest p0 p1 p2 ->
            Evergreen.V6.Types.ChangeMatchDateRequest p0
                p1
                p2
                "1234"

        Evergreen.V4.Types.NoOpToBackend ->
            Evergreen.V6.Types.NoOpToBackend


migrate_Types_ToFrontend : Evergreen.V4.Types.ToFrontend -> Evergreen.V6.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V4.Types.TeamCreated p0 p1 ->
            Evergreen.V6.Types.TeamCreated (p0 |> migrate_Types_Team)
                p1
                "1234"

        Evergreen.V4.Types.TeamLoaded p0 p1 p2 p3 ->
            Evergreen.V6.Types.TeamLoaded (p0 |> migrate_Types_Team)
                (p1 |> List.map migrate_Types_Match)
                p2
                (p3 |> List.map migrate_Types_AvailabilityRecord)

        Evergreen.V4.Types.TeamNotFound ->
            Evergreen.V6.Types.TeamNotFound

        Evergreen.V4.Types.MatchCreated p0 ->
            Evergreen.V6.Types.MatchCreated (p0 |> migrate_Types_Match)

        Evergreen.V4.Types.MemberCreated p0 ->
            Evergreen.V6.Types.MemberCreated (p0 |> migrate_Types_Member)

        Evergreen.V4.Types.AvailabilityUpdated p0 ->
            Evergreen.V6.Types.AvailabilityUpdated (p0 |> migrate_Types_AvailabilityRecord)

        Evergreen.V4.Types.MatchDateChanged p0 p1 ->
            Evergreen.V6.Types.MatchDateChanged p0 p1

        Evergreen.V4.Types.NoOpToFrontend ->
            Evergreen.V6.Types.NoOpToFrontend

